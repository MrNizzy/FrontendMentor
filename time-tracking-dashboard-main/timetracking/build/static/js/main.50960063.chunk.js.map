{"version":3,"sources":["components/Cards.js","App.js","reportWebVitals.js","index.js"],"names":["Cards","props","className","title","src","alt","timeframeCurrent","timeframe","timeframePrevious","App","useState","setTimeframe","onClick","id","Data","map","value","key","timeframes","daily","current","weekly","monthly","previous","href","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAmBeA,EAnBD,SAACC,GACb,OACE,qBAAKC,UAAW,aAAaD,EAAME,MAAnC,SACE,sBAAKD,UAAU,WAAf,UACE,sBAAKA,UAAU,eAAf,UACE,6BAAKD,EAAME,QACX,qBAAKC,IAAI,6BAA6BC,IAAK,YAE7C,gCACE,6BAAKJ,EAAMK,mBACX,iCACGL,EAAMM,UADT,MACuBN,EAAMO,8B,OCyExBC,MAhFf,WACE,MAAgCC,mBAAS,GAAzC,mBAAKH,EAAL,KAAgBI,EAAhB,KAEA,OACE,qCACE,iCACE,sBAAKT,UAAU,eAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKE,IAAI,4BAA4BC,IAAI,YACzC,gCACE,gDACA,yCACS,uBADT,kBAMJ,sBAAKH,UAAU,sBAAf,UACE,mBACEU,QAAS,kBAAMD,EAAcJ,EAAY,IACzCL,UAAyB,IAAdK,EAAkB,SAAW,GAF1C,mBAMA,mBACEK,QAAS,kBAAMD,EAAcJ,EAAY,IACzCL,UAAyB,IAAdK,EAAkB,SAAW,GAF1C,oBAMA,mBACEK,QAAS,kBAAMD,EAAcJ,EAAY,IACzCL,UAAyB,IAAdK,EAAkB,SAAW,GAF1C,2BAQJ,qBAAKL,UAAU,aAAaW,GAAG,YAA/B,SACGC,EAAKC,KAAI,SAACC,EAAOC,GAChB,OACE,cAAC,EAAD,CAEEd,MAAOa,EAAMb,MACbI,UACgB,IAAdA,EACI,WACc,IAAdA,EACA,YACc,IAAdA,EACA,aACA,OAEND,iBACgB,IAAdC,EACIS,EAAME,WAAWC,MAAMC,QACT,IAAdb,EACAS,EAAME,WAAWG,OAAOD,QACxBJ,EAAME,WAAWI,QAAQF,QAE/BZ,kBACgB,IAAdD,EACIS,EAAME,WAAWC,MAAMI,SACT,IAAdhB,EACAS,EAAME,WAAWG,OAAOE,SACxBP,EAAME,WAAWI,QAAQC,UAvB1BN,WA8Bf,sBAAKf,UAAU,cAAf,0BACe,mBAAGsB,KAAK,8CAA8CC,OAAO,SAA7D,6BADf,cAEa,mBAAGD,KAAK,uCAAuCC,OAAO,SAAtD,8BAFb,WChESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.50960063.chunk.js","sourcesContent":["const Cards = (props) => {\r\n  return (\r\n    <div className={\"card card-\"+props.title}>\r\n      <div className=\"card-tab\">\r\n        <div className=\"card-content\">\r\n          <h3>{props.title}</h3>\r\n          <img src=\"./images/icon-ellipsis.svg\" alt={\"icon\"} />\r\n        </div>\r\n        <div>\r\n          <h2>{props.timeframeCurrent}</h2>\r\n          <span>\r\n            {props.timeframe} - {props.timeframePrevious}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState } from \"react\";\nimport Cards from \"./components/Cards\";\nimport Data from \"./data.json\";\n\nfunction App() {\n  let [timeframe, setTimeframe] = useState(2);\n\n  return (\n    <>\n      <main>\n        <div className=\"card-profile\">\n          <div className=\"card-profile-top\">\n            <img src=\"./images/image-jeremy.png\" alt=\"Profile\" />\n            <div>\n              <span> Report for </span>\n              <h1>\n                Jeremy <br />\n                Robson\n              </h1>\n            </div>\n          </div>\n          <div className=\"card-profile-bottom\">\n            <a\n              onClick={() => setTimeframe((timeframe = 1))}\n              className={timeframe === 1 ? \"active\" : \"\"}\n            >\n              Daily\n            </a>\n            <a\n              onClick={() => setTimeframe((timeframe = 2))}\n              className={timeframe === 2 ? \"active\" : \"\"}\n            >\n              Weekly\n            </a>\n            <a\n              onClick={() => setTimeframe((timeframe = 3))}\n              className={timeframe === 3 ? \"active\" : \"\"}\n            >\n              Monthly\n            </a>\n          </div>\n        </div>\n        <div className=\"card-group\" id=\"cardGroup\">\n          {Data.map((value, key) => {\n            return (\n              <Cards\n                key={key}\n                title={value.title}\n                timeframe={\n                  timeframe === 1\n                    ? \"Last day\"\n                    : timeframe === 2\n                    ? \"Last week\"\n                    : timeframe === 3\n                    ? \"Last month\"\n                    : \"none\"\n                }\n                timeframeCurrent={\n                  timeframe === 1\n                    ? value.timeframes.daily.current\n                    : timeframe === 2\n                    ? value.timeframes.weekly.current\n                    : value.timeframes.monthly.current\n                }\n                timeframePrevious={\n                  timeframe === 1\n                    ? value.timeframes.daily.previous\n                    : timeframe === 2\n                    ? value.timeframes.weekly.previous\n                    : value.timeframes.monthly.previous\n                }\n              />\n            );\n          })}\n        </div>\n      </main>\n      <div className=\"attribution\">\n        Challenge by <a href=\"https://www.frontendmentor.io?ref=challenge\" target=\"_blank\">Frontend Mentor</a>\n        . Coded by <a href=\"https://www.linkedin.com/in/mrnizzy/\" target=\"_blank\"> Nizzy Hernandez</a>.\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}